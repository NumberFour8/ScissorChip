#include "msp430.h"
NAME msp_addsub

EXTERN mp_freeze

PUBLIC mp_add   
RSEG CODE       

; Adds two 256-bit numbers A and B and stores the result in C.
; B is pointed by R14, A is pointed by R13
; The result C is pointed by R12

mp_add
  
    PUSHM.W #2,R6       ; Save R5-R6
    
    MOV R14,R6
    ADD #32,R6
    CLRC   ; Need to reset carry bit for the first ADDC to be equivalent to ADD
inadd
    MOV @R13+,0(R12)
    ADDC @R14+,0(R12) 
    MOV SR,R5
    INCD R12
    CMP R14,R6
    JZ finadd
    MOV R5,SR
    JMP inadd
finadd   
  
    SUB #32,R12    ; Rewind R12  
    POPM.W #2,R6
    
    CLR R13
    CALLA #mp_freeze
RETA
      
PUBLIC mp_sub   
RSEG CODE       

; Subtracts B from A where A and B are 256-bit numbers and stores the result in C.
; B is pointed by R14, A is pointed by R13
; The result C is pointed by R12

mp_sub
    
    PUSHM.W #2,R6   ; Save R5 - R6
    
    MOV R14,R6
    ADD #32,R6
    SETC           ; Need to set carry bit for the first SUBC to be equivalent to SUB
insub
    MOV @R13+,0(R12)
    SUBC @R14+,0(R12) 
    MOV SR,R5
    INCD R12
    CMP R14,R6
    JZ finsub
    MOV R5,SR
    JMP insub
finsub

    SUB #32,R12     ; Rewind R12
    POPM.W #2,R6    ; Restore R5 - R6
    
    MOV #1,R13
    CALLA #mp_freeze
    
RETA
  
END
